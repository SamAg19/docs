{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Razor network Razor network is a decentralised oracle network. Any application can utilize Razor in their application by interfacing with our smart contracts. White paper The latest version of the whitepaper is always available at Whitepaper Smart contracts Our smart contracts are hosted at Contracts Please note that the project is in active development and breaking changes are introduced frequently. Client A javascript reference client is being developed. It can be found here: CLI Please see Client documentation for more details.","title":"Razor network"},{"location":"#razor-network","text":"Razor network is a decentralised oracle network. Any application can utilize Razor in their application by interfacing with our smart contracts.","title":"Razor network"},{"location":"#white-paper","text":"The latest version of the whitepaper is always available at Whitepaper","title":"White paper"},{"location":"#smart-contracts","text":"Our smart contracts are hosted at Contracts Please note that the project is in active development and breaking changes are introduced frequently.","title":"Smart contracts"},{"location":"#client","text":"A javascript reference client is being developed. It can be found here: CLI Please see Client documentation for more details.","title":"Client"},{"location":"FAQ/","text":"FAQs What is an oracle? Blockchains do not have access to the data from outside the blockchain. Such data is necessary for operation of various decentralized applications. This problem is solved by an entity called an oracle. What is Razor Network? Razor Network is truly decentralized oracle platform offering a high degree of decentralization and economic security. What is the consensus algorithm used by Razor Network? Razor Network is a Proof of Stake consensus algorithm which achieves consensus on oracle values by Truth-by-consensus algorithm. Does Razor Network have its own blockchain? Razor Network currently runs directly on Ethereum public networks. In the future, it will run on its own Proof of Stake blockchain with Honey Badger BFT. What kind of data is supported by Razor Network? Razor Network can retrieve any data which is publicly accessible on the internet. What is a Schell? Schell is the native ERC20 utility token used in Razor Network for staking purposes. It has the abbreviation SCH and symbol \u0282. Who can run a node? Razor Network is permissionless and decentralized. Anyone can run a node in the network provided they have enough Schells. How can I earn Schells? Schells can be earned by becoming a staker in the network. Schells are earned in the form of block rewards in the network. I have more questions Please visit documentation for more details.","title":"FAQ"},{"location":"FAQ/#faqs","text":"","title":"FAQs"},{"location":"FAQ/#what-is-an-oracle","text":"Blockchains do not have access to the data from outside the blockchain. Such data is necessary for operation of various decentralized applications. This problem is solved by an entity called an oracle.","title":"What is an oracle?"},{"location":"FAQ/#what-is-razor-network","text":"Razor Network is truly decentralized oracle platform offering a high degree of decentralization and economic security.","title":"What is Razor Network?"},{"location":"FAQ/#what-is-the-consensus-algorithm-used-by-razor-network","text":"Razor Network is a Proof of Stake consensus algorithm which achieves consensus on oracle values by Truth-by-consensus algorithm.","title":"What is the consensus algorithm used by Razor Network?"},{"location":"FAQ/#does-razor-network-have-its-own-blockchain","text":"Razor Network currently runs directly on Ethereum public networks. In the future, it will run on its own Proof of Stake blockchain with Honey Badger BFT.","title":"Does Razor Network have its own blockchain?"},{"location":"FAQ/#what-kind-of-data-is-supported-by-razor-network","text":"Razor Network can retrieve any data which is publicly accessible on the internet.","title":"What kind of data is supported by Razor Network?"},{"location":"FAQ/#what-is-a-schell","text":"Schell is the native ERC20 utility token used in Razor Network for staking purposes. It has the abbreviation SCH and symbol \u0282.","title":"What is a Schell?"},{"location":"FAQ/#who-can-run-a-node","text":"Razor Network is permissionless and decentralized. Anyone can run a node in the network provided they have enough Schells.","title":"Who can run a node?"},{"location":"FAQ/#how-can-i-earn-schells","text":"Schells can be earned by becoming a staker in the network. Schells are earned in the form of block rewards in the network.","title":"How can I earn Schells?"},{"location":"FAQ/#i-have-more-questions","text":"Please visit documentation for more details.","title":"I have more questions"},{"location":"client/","text":"Client End user javascript client implmentation for Razor network. Installation npm i mv keys_sample.json keys.json add api keys in keys.json create directory 'keys' Please make sure that contracts repo is also cloned in parent directory and contracts are compiled with truffle compile . e.g. contracts are in ~/contracts and this dir is ~/cli Commands Run the commands in following way: node index.js You can run following commands in CLI: -help See a list of available commands create password Creates a new wallet with given password. The wallets are stored in keys/ directory. WARNING: this is not a secure method of key generation, DO NOT use it for assets on mainnet. Fund this account with ether and schells to start participating in the network. stake amount address password vote apiId address password unstake address password withdraw address password transfer toAddress fromAddress password address is the address of the wallet generated using create command. apiId is the api to use to get ETHUSD price. 1 for Kraken, 2 for Gemini. Example node index.js create deadbeef node index.js stake 1000 0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c deadbeef node index.js vote 1 0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c deadbeef // apiid 0 = CMC // apiid 1 = Kraken // apiid 2 = Gemini","title":"Client"},{"location":"client/#client","text":"End user javascript client implmentation for Razor network.","title":"Client"},{"location":"client/#installation","text":"npm i mv keys_sample.json keys.json add api keys in keys.json create directory 'keys' Please make sure that contracts repo is also cloned in parent directory and contracts are compiled with truffle compile . e.g. contracts are in ~/contracts and this dir is ~/cli","title":"Installation"},{"location":"client/#commands","text":"Run the commands in following way: node index.js You can run following commands in CLI: -help See a list of available commands create password Creates a new wallet with given password. The wallets are stored in keys/ directory. WARNING: this is not a secure method of key generation, DO NOT use it for assets on mainnet. Fund this account with ether and schells to start participating in the network. stake amount address password vote apiId address password unstake address password withdraw address password transfer toAddress fromAddress password address is the address of the wallet generated using create command. apiId is the api to use to get ETHUSD price. 1 for Kraken, 2 for Gemini.","title":"Commands"},{"location":"client/#example","text":"node index.js create deadbeef node index.js stake 1000 0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c deadbeef node index.js vote 1 0x5a0b54d5dc17e0aadc383d2db43b0a0d3e029c4c deadbeef // apiid 0 = CMC // apiid 1 = Kraken // apiid 2 = Gemini","title":"Example"},{"location":"contracts/","text":"Contracts These are the contracts for Razor network testnet. Deployment Install truffle Install npm i Run ganache-cli ganache-cli -i 420 -a 100 Run tests truffle test For bigSchelling.js large number of accounts are required ganache-cli -s 0 -i 420 -a 101 For testing with cli, set blocktime ganache-cli -s 0 -i 420 -a 30 -b 5 Deploy on ganache truffle migrate --reset create .secret file with mnemonic of the private key used to deploy on rinkeby Deploy on rinkeby (.secret file must be present with mnemonic of the private key used to deploy) truffle migrate --network rinkeby --reset","title":"Contracts"},{"location":"contracts/#contracts","text":"These are the contracts for Razor network testnet.","title":"Contracts"},{"location":"contracts/#deployment","text":"Install truffle Install npm i Run ganache-cli ganache-cli -i 420 -a 100 Run tests truffle test For bigSchelling.js large number of accounts are required ganache-cli -s 0 -i 420 -a 101 For testing with cli, set blocktime ganache-cli -s 0 -i 420 -a 30 -b 5 Deploy on ganache truffle migrate --reset create .secret file with mnemonic of the private key used to deploy on rinkeby Deploy on rinkeby (.secret file must be present with mnemonic of the private key used to deploy) truffle migrate --network rinkeby --reset","title":"Deployment"}]}